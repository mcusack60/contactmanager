{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/test/Test.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Header","branding","href","About","Test","title","body","fetch","then","response","json","NotFound","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+3BAGA,IAAMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,iBACD,OAAO,EAAP,GACOF,EADP,CAEIG,SAAUH,EAAMG,SAASC,QAAO,SAAAC,GAAO,OACvCA,EAAQC,KAAOL,EAAOM,aAE9B,IAAK,cACD,OAAO,EAAP,GACOP,EADP,CAEIG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAE5C,IAAK,iBACD,OAAO,EAAP,GACOH,EADP,CAEIG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OACpCA,EAAQC,KAAOL,EAAOM,QAAQD,GAAMD,EAC9BJ,EAAOM,QAAWF,OAEhC,QACI,OAAOL,IAINS,EAAb,2MACIT,MAAQ,CACJG,SAAU,GACVO,SAAU,SAAAT,GAAM,OAAI,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAOC,QAHlE,mNAO0BW,IAAMC,IAAI,8CAPpC,OAOcC,EAPd,OASQC,KAAKJ,SAAS,CAACR,SAAUW,EAAIE,OATrC,qIAYQ,OACI,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,OACzBe,KAAKG,MAAMC,cAd5B,GAA8BC,aAoBjBC,EAAWzB,EAAQyB,SC2BjBC,E,2MAtEXtB,MAAQ,CACJuB,iBAAiB,G,EAGrBC,YAAc,WACV,EAAKb,SAAS,CAAEY,iBAAkB,EAAKvB,MAAMuB,mB,EAGjDE,c,uCAAgB,WAAOnB,EAAII,GAAX,SAAAgB,EAAA,+EAEFd,IAAMe,OAAN,qDAA2DrB,IAFzD,OAGRI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IAHpC,+CAMRI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IANpC,wD,gIAaN,IAAD,SAC8BS,KAAKG,MAAMb,QAAtCC,EADH,EACGA,GAAIsB,EADP,EACOA,KAAMC,EADb,EACaA,MAAOC,EADpB,EACoBA,MACjBP,EAAoBR,KAAKf,MAAzBuB,gBAER,OACI,kBAACF,EAAD,MACK,SAAAJ,GAAU,IACAP,EAAYO,EAAZP,SACP,OACI,yBAAKqB,UAAU,uBACX,4BACKH,EAAM,IACP,uBACII,QAAS,EAAKR,YACdO,UAAU,cACVE,MAAO,CAAEC,OAAQ,aAErB,uBAIIF,QAAS,EAAKP,cAAcU,KAAK,EAAM7B,EAAII,GAC3CqB,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWE,MAAO,QAASC,MAAO,SAEvD,kBAAC,IAAD,CAAMC,GAAE,uBAAkBhC,IACtB,uBAAGyB,UAAU,oBACbE,MAAO,CAACC,OAAS,UAAWE,MAAO,QAASC,MAAO,QAASE,YAAa,YAIhFhB,EACG,wBAAIQ,UAAU,cACV,wBAAIA,UAAU,mBAAd,UAAwCF,GACxC,wBAAIE,UAAU,mBAAd,UAAwCD,IAE5C,a,GA1DVV,aCmBPoB,E,iLAlBP,OACI,kBAACnB,EAAD,MACK,SAAAJ,GAAU,IACCd,EAAac,EAAbd,SACR,OACI,kBAAC,IAAMsC,SAAP,KACI,wBAAIV,UAAU,kBAAiB,0BAAMA,UAAU,eAAhB,iBAC9B5B,EAASK,KAAI,SAAAH,GAAO,OACjB,kBAAC,EAAD,CAASqC,IAAKrC,EAAQC,GAAID,QAASA,e,GAX5Ce,a,iBCAjBuB,EAAiB,SAAC,GAQjB,IAPHC,EAOE,EAPFA,MACAhB,EAME,EANFA,KACAX,EAKE,EALFA,MACA4B,EAIE,EAJFA,YACA3C,EAGE,EAHFA,KACA4C,EAEE,EAFFA,SACAC,EACE,EADFA,MAEA,OACI,yBAAKhB,UAAU,cACX,2BAAOiB,QAASpB,GAAOgB,EAAvB,KACA,2BAAO1C,KAAMA,EACN0B,KAAMA,EACNG,UAAWkB,IAAW,+BAA+B,CAAC,aAAcF,IACpEF,YAAaA,EACb5B,MAAOA,EACP6B,SAAUA,IACTC,GAAS,yBAAKhB,UAAU,oBAAoBgB,KAehEJ,EAAeO,aAAe,CAC1BhD,KAAM,QAGKyC,QCoCAQ,E,2MAtEXnD,MAAQ,CACJ4B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,I,EAEZN,SAAW,SAACO,GAAD,OAAO,EAAK1C,SAAL,eAAiB0C,EAAEC,OAAO1B,KAAOyB,EAAEC,OAAOrC,S,EAE5DsC,S,uCAAW,WAAO7C,EAAU2C,GAAjB,yBAAA3B,EAAA,yDACP2B,EAAEG,iBADK,EAEsB,EAAKxD,MAA3B4B,EAFA,EAEAA,KAAMC,EAFN,EAEMA,MAAOC,EAFb,EAEaA,MAGP,KAATF,EALG,uBAMH,EAAKjB,SAAS,CAACyC,OAAQ,CAACxB,KAAM,sBAN3B,6BASO,KAAVC,EATG,uBAUH,EAAKlB,SAAS,CAACyC,OAAQ,CAACvB,MAAO,+BAV5B,6BAaO,KAAVC,EAbG,wBAcH,EAAKnB,SAAS,CAACyC,OAAQ,CAACtB,MAAO,8BAd5B,kCAkBD2B,EAAa,CAChB7B,OACAC,QACAC,SArBI,UAyBWlB,IAAM8C,KAAK,6CAA8CD,GAzBpE,QAyBD3C,EAzBC,OA0BPJ,EAAS,CAACR,KAAM,cAAeK,QAASO,EAAIE,OAK5C,EAAKL,SAAS,CAACiB,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIsB,OAAQ,KACvD,EAAKlC,MAAMyC,QAAQC,KAAK,KAhCjB,4C,gIAmCD,IAAD,SACgC7C,KAAKf,MAAnC4B,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOsB,EADtB,EACsBA,OAE3B,OACI,kBAAC/B,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKqB,UAAU,aACX,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACX,0BAAMwB,SAAU,EAAKA,SAASpB,KAAK,EAAMzB,IACrC,kBAAC,EAAD,CAAgBkC,MAAM,OAAOhB,KAAK,OAAOkB,SAAU,EAAKA,SAAU7B,MAAOW,EAAMiB,YAAY,aAAaE,MAAOK,EAAOxB,OACtH,kBAAC,EAAD,CAAgBgB,MAAM,QAAQ1C,KAAK,QAAQ4C,SAAU,EAAKA,SAAU7B,MAAOY,EAAOgB,YAAY,cAAcjB,KAAK,QAAQmB,MAAOK,EAAOvB,QACvI,kBAAC,EAAD,CAAgBe,MAAM,QAAQE,SAAU,EAAKA,SAAU7B,MAAOa,EAAOe,YAAY,cAAcjB,KAAK,QAAQmB,MAAOK,EAAOtB,QAC1H,2BAAO5B,KAAK,SAASe,MAAM,cAAcc,UAAU,sC,GA3D9DX,aCkFVyC,E,2MAjFX7D,MAAQ,CACJ4B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,I,EAcZN,SAAW,SAACO,GAAD,OAAO,EAAK1C,SAAL,eAAiB0C,EAAEC,OAAO1B,KAAOyB,EAAEC,OAAOrC,S,EAE5DsC,S,uCAAW,WAAO7C,EAAU2C,GAAjB,2BAAA3B,EAAA,yDACP2B,EAAEG,iBADK,EAEsB,EAAKxD,MAA3B4B,EAFA,EAEAA,KAAMC,EAFN,EAEMA,MAAOC,EAFb,EAEaA,MAGP,KAATF,EALG,uBAMH,EAAKjB,SAAS,CAACyC,OAAQ,CAACxB,KAAM,sBAN3B,6BASO,KAAVC,EATG,uBAUH,EAAKlB,SAAS,CAACyC,OAAQ,CAACvB,MAAO,+BAV5B,6BAaO,KAAVC,EAbG,wBAcH,EAAKnB,SAAS,CAACyC,OAAQ,CAACtB,MAAO,8BAd5B,kCAkBDgC,EAAa,CACflC,OACAC,QACAC,SAGIxB,EAAO,EAAKY,MAAM6C,MAAMC,OAAxB1D,GAxBD,UAyBWM,IAAMqD,IAAN,qDAAwD3D,GAAMwD,GAzBzE,QAyBDhD,EAzBC,OA2BPJ,EAAS,CAACR,KAAM,iBAAkBK,QAASO,EAAIE,OAG/C,EAAKL,SAAS,CAACiB,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIsB,OAAQ,KACvD,EAAKlC,MAAMyC,QAAQC,KAAK,KA/BjB,4C,sQAZCtD,EAAOS,KAAKG,MAAM6C,MAAMC,OAAxB1D,G,SACUM,IAAMC,IAAN,qDAAwDP,I,OAApEQ,E,OAEAT,EAAUS,EAAIE,KACpBD,KAAKJ,SAAS,CACViB,KAAMvB,EAAQuB,KACdC,MAAOxB,EAAQwB,MACfC,MAAOzB,EAAQyB,Q,qIAuCb,IAAD,SACgCf,KAAKf,MAAnC4B,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOsB,EADtB,EACsBA,OAE3B,OACI,kBAAC/B,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKqB,UAAU,aACX,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACX,0BAAMwB,SAAU,EAAKA,SAASpB,KAAK,EAAMzB,IACrC,kBAAC,EAAD,CAAgBkC,MAAM,OAAOhB,KAAK,OAAOkB,SAAU,EAAKA,SAAU7B,MAAOW,EAAMiB,YAAY,aAAaE,MAAOK,EAAOxB,OACtH,kBAAC,EAAD,CAAgBgB,MAAM,QAAQ1C,KAAK,QAAQ4C,SAAU,EAAKA,SAAU7B,MAAOY,EAAOgB,YAAY,cAAcjB,KAAK,QAAQmB,MAAOK,EAAOvB,QACvI,kBAAC,EAAD,CAAgBe,MAAM,QAAQE,SAAU,EAAKA,SAAU7B,MAAOa,EAAOe,YAAY,cAAcjB,KAAK,QAAQmB,MAAOK,EAAOtB,QAC1H,2BAAO5B,KAAK,SAASe,MAAM,iBAAiBc,UAAU,sC,GAtEhEX,aCD1B,SAAS8C,EAAOhD,GAAQ,IACbiD,EAAYjD,EAAZiD,SACP,OACI,yBAAKpC,UAAU,2DACX,yBAAKA,UAAU,aACX,uBAAGqC,KAAK,IAAIrC,UAAU,gBACjBoC,GAEL,6BACI,wBAAIpC,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,YAAW,uBAAGA,UAAU,gBAA/C,SAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,eAAeP,UAAU,YAAW,uBAAGA,UAAU,gBAA1D,QAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,YAAW,uBAAGA,UAAU,oBAApD,cAS5BmC,EAAOhB,aAAe,CACpBiB,SAAU,UASGD,QC7BAG,EAVD,WACV,OACI,6BACI,wBAAItC,UAAU,aAAd,0BACA,uBAAGA,UAAU,QAAb,iCACA,uBAAGA,UAAU,kBAAb,mBCyCGuC,E,2MA7CXtE,MAAQ,CACJuE,MAAO,GACPC,KAAM,I,mFAGW,IAAD,OAChBC,MAAM,gDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA1D,GAAI,OAAI,EAAKL,SAAS,CACxB4D,MAAOvD,EAAKuD,MACZC,KAAMxD,EAAKwD,Y,+BAwBb,IAAD,EACiBzD,KAAKf,MAApBuE,EADF,EACEA,MAAOC,EADT,EACSA,KACd,OACI,6BACI,4BAAKD,GACD,2BAAIC,Q,GAxCLpD,aCSJyD,G,YATE,WACb,OACI,6BACI,wBAAI9C,UAAU,aAAY,0BAAMA,UAAU,eAAhB,OAA1B,mBACA,uBAAGA,UAAU,QAAb,sCCgCG+C,E,iLAtBP,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAQC,SAAUC,mBAClB,yBAAKjD,UAAU,OACX,kBAAC,EAAD,CAAQoC,SAAS,oBACjB,yBAAKpC,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,IAAIC,UAAW3C,IACjC,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,eAAeC,UAAWhC,IAC5C,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,oBAAoBC,UAAWtB,IACjD,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,SAASC,UAAWd,IACtC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,QAAQC,UAAWb,IACrC,kBAAC,IAAD,CAAOa,UAAWN,a,GAd5BzD,aCFEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCZNyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,MAAK,SAAAqB,GACjCA,EAAaC,kB","file":"static/js/main.24840924.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                contact.id === action.payload.id ? (contact\r\n                    = action.payload) : contact)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onShowClick = () => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo });\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        } catch (e) {\r\n            //want to delete from the dom even if we get an error\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}{' '}\r\n                                <i\r\n                                    onClick={this.onShowClick}\r\n                                    className=\"fas fa-plus\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                                <i\r\n                                    // onClick={e =>\r\n                                    //   value.dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n                                    // }\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                    className=\"fas fa-times\"\r\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                    style={{cursor:  'pointer', float: 'right', color: 'black', marginRight: '1rem'}}\r\n                                    ></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from \"./Contact\"\r\nimport {Consumer} from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact List</span></h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}:</label>\r\n            <input type={type}\r\n                   name={name}\r\n                   className={classnames('form-control form-control-lg',{'is-invalid': error})}\r\n                   placeholder={placeholder}\r\n                   value={value}\r\n                   onChange={onChange}/>\r\n                   {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for Errors...name, email and phone are required\r\n        if (name === '') {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({errors: {email: 'Email address is required'}});\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({errors: {phone: 'Phone number is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n           name,\r\n           email,\r\n           phone\r\n        };\r\n\r\n        //Add a contact\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n\r\n\r\n        //Clear state\r\n        this.setState({name: '', email: '', phone: '', errors: {}});\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup label=\"Name\" name=\"name\" onChange={this.onChange} value={name} placeholder=\"Enter Name\" error={errors.name} />\r\n                                    <TextInputGroup label=\"Email\" type=\"email\" onChange={this.onChange} value={email} placeholder=\"Enter Email\" name=\"email\" error={errors.email} />\r\n                                    <TextInputGroup label=\"Phone\" onChange={this.onChange} value={phone} placeholder=\"Enter Phone\" name=\"phone\" error={errors.phone} />\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        //const res = await axios.get('https://jsonplaceholder.typicode.com/users/1');\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for Errors...name, email and phone are required\r\n        if (name === '') {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({errors: {email: 'Email address is required'}});\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({errors: {phone: 'Phone number is required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n        //Clear state\r\n        this.setState({name: '', email: '', phone: '', errors: {}});\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup label=\"Name\" name=\"name\" onChange={this.onChange} value={name} placeholder=\"Enter Name\" error={errors.name} />\r\n                                    <TextInputGroup label=\"Email\" type=\"email\" onChange={this.onChange} value={email} placeholder=\"Enter Email\" name=\"email\" error={errors.email} />\r\n                                    <TextInputGroup label=\"Phone\" onChange={this.onChange} value={phone} placeholder=\"Enter Phone\" name=\"phone\" error={errors.phone} />\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n// Can also do the function this way: const Header = () => {\r\nfunction Header(props) {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\" >\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager </h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React, {Component} from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n};\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }));\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n    //\r\n    // componentDidUpdate() {\r\n    //     console.log('componentDidUpdate...');\r\n    // }\r\n    //\r\n    // componentWillReceiveProps(nextProps, nextContext) {\r\n    //     console.log('componentWillReceiveProps');\r\n    // }\r\n    //\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     return null;\r\n    // }\r\n    //\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.log('getSnapshotBeforeUpdate');\r\n    // }\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                    <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from './components/layout/Header';\nimport About from \"./components/pages/About\";\nimport Test from \"./components/test/Test\";\nimport {Provider} from './Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from \"./components/pages/NotFound\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router basename={process.env.PUBLIC_URL}>\n                <div className=\"App\">\n                    <Header branding=\"Contact Manager\" />\n                    <div className=\"container\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Contacts}/>\n                            <Route exact path=\"/contact/add\" component={AddContact}/>\n                            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                            <Route exact path=\"/about\" component={About}/>\n                            <Route exact path=\"/test\" component={Test}/>\n                            <Route component={NotFound}/>\n                        </Switch>\n                    </div>\n                </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}